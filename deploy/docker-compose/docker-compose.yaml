version: "3.9"

networks:
  tui:
    ipam:
      driver: default
      config:
        - subnet: '177.7.0.0/16'

volumes:
  mongo:
  terraform:

services:
  server:
    build:
      context: ./backend
    container_name: tui-server
    restart: always
    ports:
      - '8888:8888'
    environment:
      - SERVER_HOST=0.0.0.0
      - MONGO_HOST=tui-mongo
    depends_on:
      - mongo
    links:
      - mongo
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      tui:
        ipv4_address:
          177.7.0.12

  web:
    build:
      context: ./web
    container_name: tui-web
    restart: always
    environment:
      - TUI_BASE_PATH=tui-server
    ports:
      - '8080:80'
    depends_on:
      - server
    command: [ 'nginx-debug', '-g', 'daemon off;' ]
    networks:
      tui:
        ipv4_address:
          177.7.0.13

  mongo:
    image: mongo:6.0.5
    container_name: tui-mongo
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongo:/data/db
    networks:
      tui:
        ipv4_address: 177.7.0.14

  terraform-latest:
    build:
      context: ./deploy
      dockerfile: terraform.Dockerfile
      args:
        TERRAFORM_VERSION: 1.4.4
        HTTPS_PROXY: ${HTTPS_PROXY}
    container_name: tui-terraform-latest
    volumes:
      - terraform:/terraform
    networks:
      tui:
        ipv4_address: 177.7.0.15
